<div id="code-samples" class="content" style="display: none;">
    <h2>Code Samples</h2>
    <article>
        <h4>Code Sample #1</h4>
        <p> A snippet of a function which retrieves JSON data from a google spreadsheet, parses it and sends the usable object to a callback function.</p>
        <code>
            <pre>load: function (callback) {
              var apiKey = 'THE-API-KEY-GOES-HERE';
              var googleUrl = 'https://spreadsheets.google.com/feeds/list/@apiKey/od6/public/values?alt=json-in-script';
              $.ajax({
                url: googleUrl.replace('@apiKey', apiKey),
                dataType: 'jsonp',
                success: function (data) {
                  ToolBelt.data = ToolBelt.parseGoogleData(data);
                  if (callback) callback(data);
                }
              });
            },
            </pre>
        </code>
        <p>This is the parser function which strips a part of the properties' names to make it more human usable.</p>
        <code>
            <pre>parseGoogleData: function (data) {
              var tempArr = [];
              $.each(data.feed.entry, function (ix, val) {
                var obj = {};
                for (var key in val) {
                  var matched = key.match(/gsx\$/);
                  if (matched) {
                    obj[key.slice(4)] = val[key].$t;
                  }
                }
                tempArr.push(new Item(obj));
              });
              return tempArr;
            },
            </pre>
        </code>
        <h4>Code Sample #2</h4>
        <p>An Example of work in progress in CodeIgniter. This snipet is a part of a model designed to upload an image to be used in a profile page.</p>
        <code>
            <pre><?php
$this->load->library('upload', $config);

if (!$this->upload->do_upload()) //upload is unsucessfull { $error = array('error' => $this->upload->display_errors()); $this->load->view('upload_view', $error);

}
else
{ /* Uploads the image renames the file
  ToDo: * get the student id from the database
        * generate a random number
        * append both to the file name and enter the filename in the database. */
$this->load->library('image_lib');
$upload_data = $this->upload->data();
$file_name = $upload_data['file_name'];
$path_parts = pathinfo($config['upload_path'] . $file_name);
$extention = $path_parts['extension'];
rename($config['upload_path'] . '/' . $file_name, $config['upload_path'] . '/' . "dbEntryId_TimeStamp" . '.' . $extention);
$data = array(
'upload_data' => $upload_data
);
}
            </pre>
        </code>
    </article>
</div>
